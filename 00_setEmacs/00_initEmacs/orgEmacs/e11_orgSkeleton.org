#+STARTUP: showall
* e11_org-skeleton.org
  :PROPERTIES:
  :ARCHIVE_TIME: 2014-06-16 Mon 10:18
  :ARCHIVE_FILE: ~/Dropbox/config/emacs/00_setEmacs/00_initEmacs/orgEmacs/e11_org-skeleton.org
  :ARCHIVE_OLPATH: e02_core.org/Org-mode-core
  :ARCHIVE_CATEGORY: e11_org-skeleton
  :END:
#+BEGIN_SRC emacs-lisp
    ;; C-c C-e t
    (define-skeleton org-skeleton
    "Header info for a emacs-org file."
    "Title: "
    "# -*- mode: org; org-export-babel-evaluate: nil -*- \n"
    "#+TITLE:" str " \n"
    "#+AUTHOR: Bingwei TIAN\n"
    "#+EMAIL: bwtian@gmail.com\n"
    "#+DATE:  \today\n"
    "#+OPTIONS: H:4 toc:2 num:2 \n"
    "#+STARTUP: align fold nodlcheck hidestars oddeven lognotestate inlineimages \n"
    "#+LICENSE: GPLv3 \n"
    "#+CREATED:  \n"
    "#+LASTEDIT:  \n"
    "#+CATEGORIES: Org-babel, R and R function file \n"
    "#+PROPERTY:   header-args  session *R* \n"
    "#+PROPERTY:   exports both  \n"
    "#+PROPERTY:   cache yes \n"
    "#+PROPERTY:   tangle yes \n"
    "#+DEPENDENCY:"  " \n")
    (global-set-key [C-S-f4] 'org-skeleton)


    (define-skeleton comment-skeleton
    "Input #+BEGIN_COMMENT #+END_COMMENT in org-mode"
    ""
    "#+BEGIN_COMMENT\n"
    _"\n"
    "#+END_COMMENT\n")
    (global-set-key [C-ccc] 'comment-skeleton)

    (define-skeleton comment1-skeleton
    "Input code blockers in org-mode"
    ""
    "# #####################################################################\n"
    "# #\n"
    "# #####################################################################\n")
    (global-set-key [C-S-f5] 'comment1-skeleton)

    (define-skeleton comment2-skeleton
    "Input code blockers in org-mode"
    ""
    "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n"
    "%% R code chunk: \n"
    "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n")
    (global-set-key [C-S-f6] 'comment2-skeleton)

    (define-skeleton comment3-skeleton
    "Input code blockers in org-mode"
    ""
    "# =====================================================================\n"
    "# \n"
    "# =====================================================================\n")
    (global-set-key [C-S-f7] 'comment3-skeleton)

    (define-skeleton markdown-skeleton
    "Input code blockers for markdown"
    ""
    "# \n"
    "========================================================\n")
    (global-set-key [C-S-f8] 'markdown-skeleton)

    (define-skeleton latex-skeleton
    "Input end to latex sub file"
    ""
    _"\n"
  "%%% Local Variables: \n"
  "%%% mode: latex \n"
  "%%% mode: outline-minor \n"
  "%%% TeX-master: \"../main\" \n"
  "%%% TeX-engine: pdflatex \n"
  "%%% TeX-PDF-mode: t \n"
  "%%% End: \n")
   (global-set-key [C-S-f9] 'latex-skeleton)

    (define-skeleton fig-skeleton
    "Input NAME and CAPTION in org-mode"
    ""
    "#+CAPTION: \n"
    "#+NAME: fig:study-area  \n"
    "#+NAME: tab:basic-data  \n"

    )
    (global-set-key [C-S-f10] 'fig-skeleton)


    (define-skeleton R-skeleton
    "Input R babel in org-mode"
    ""

    "#+HEADER: :cache yes :tangle yes\n"
    "#+NAME: r:figA \n"
    "#+BEGIN_SRC R :session :file ~/Dropbox/3figs/iamg/preffix-.png :results graphics\n"
    "###############################################################################\n"
    "## R code chunk:\n"
    "###############################################################################\n"
    ;; "#+ Rmd chunk \n"
    ;; "#' R Spin comments \n"
    _"\n"
    _"\n"
    "#+END_SRC\n"

    "#+CAPTION: Table/figure name Out put of above code\n"
    "#+NAME: fig:A  \n"
    "#+RESULTS: r:figA  \n"
    )
    (global-set-key [C-S-f11] 'R-skeleton)


    (define-skeleton emacs-lisp-skeleton
    "Input Emacs-lisp babel in org-mode"
    ""
    "#+NAME: fig: \n"
    "#+HEADER: :cache yes :tangle yes :exports none\n "
    "#+HEADER: :results output graphics\n"
    "#+BEGIN_SRC dot :file ~/Dropbox/3figs/test<2014-07-28 Mon>.png \n"
    _"\n"
    "#+END_SRC\n"
    )
    (global-set-key [C-S-f12] 'emacs-lisp-skeleton)
#+END_SRC
